#lang racket

(define (morse-decode code)
  (define morse-alphabet
    `((,(string->symbol ".-") . "a")
      (,(string->symbol "-...") . "b")
      (,(string->symbol "-.-.") . "c")
      (,(string->symbol "-..") . "d")
      (,(string->symbol ".") . "e")
      (,(string->symbol "..-.") . "f")
      (,(string->symbol "--.") . "g")
      (,(string->symbol "....") . "h")
      (,(string->symbol "..") . "i")
      (,(string->symbol ".---") . "j")
      (,(string->symbol "-.-") . "k")
      (,(string->symbol ".-..") . "l")
      (,(string->symbol "--") . "m")
      (,(string->symbol "-.") . "n")
      (,(string->symbol "---") . "o")
      (,(string->symbol ".--.") . "p")
      (,(string->symbol "--.-") . "q")
      (,(string->symbol ".-.") . "r")
      (,(string->symbol "...") . "s")
      (,(string->symbol "-") . "t")
      (,(string->symbol "..-") . "u")
      (,(string->symbol "...-") . "v")
      (,(string->symbol ".--") . "w")
      (,(string->symbol "-..-") . "x")
      (,(string->symbol "-.--") . "y")
      (,(string->symbol "--..") . "z")
      (,(string->symbol "-----") . "0")
      (,(string->symbol ".----") . "1")
      (,(string->symbol "..---") . "2")
      (,(string->symbol "...--") . "3")
      (,(string->symbol "....-") . "4")
      (,(string->symbol ".....") . "5")
      (,(string->symbol "-....") . "6")
      (,(string->symbol "--...") . "7")
      (,(string->symbol "---..") . "8")
      (,(string->symbol "----.") . "9")
      (,(string->symbol "_") . "_")
      (,(string->symbol "*") . ".")))
  
  (define (lookup-char code)
    (cdr (assq (string->symbol code) morse-alphabet)))

  (map (lambda (word)
         (map lookup-char (string-split word " ")))
       (string-split code "  ")))


(define (decode code)
  (string-join (map (lambda (word)
                      (apply string-append word))
                    (morse-decode code))
               " "))

(decode "-- .--.  ..--- ----- ..--- ..---")